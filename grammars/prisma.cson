name: 'Prisma'
scopeName: 'source.prisma'
type: 'tree-sitter'
parser: 'tree-sitter-prisma'
fileTypes: ['prisma']
injectionRegex: '^prisma$'
folds: [
  {
    type: 'comment'
  }
  {
    start: { index: 0, type: '{' }
    end: { index: -1, type: '}' }
  }
  {
    start: { index: 0, type: '[' }
    end: { index: -1, type: ']' }
  }
]
comments:
  start: '// '
scopes:
  'program': 'source.prisma'
  '"("': 'punctuation.definition.parameters.begin.bracket.round'
  '")"': 'punctuation.definition.parameters.end.bracket.round'
  '"{"': 'punctuation.definition.function.body.begin.bracket.curly'
  '"}"': 'punctuation.definition.function.body.end.bracket.curly'
  '";"': 'punctuation.terminator.statement.semicolon'
  '"["': 'punctuation.definition.array.begin.bracket.square'
  '"]"': 'punctuation.definition.array.end.bracket.square'

  # 'model_definition': 'meta.class'
  '"model"': 'storage.type.model'
  'model_definition > identifier': 'entity.name.model'
  'column_statement > identifier': 'variable.other.object.property',
  'comment': [
    {
      match: "^//",
      scopes: 'comment.line'
    },
    'comment.block'
  ]

  'idenfifier': [
    {
      match: '^(datasource|model)$'
      scopes: 'support.variable'
    }
  ]
